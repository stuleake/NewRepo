// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TQ.Data.FeeCalculator;

namespace TQ.Data.FeeCalculator.Migrations
{
    [DbContext(typeof(FeeCalculatorContext))]
    partial class FeeCalculatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Answer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParameterAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnswerId");

                    b.ToTable("Answers","dbo");

                    b.HasData(
                        new
                        {
                            AnswerId = new Guid("a7aab1b5-5f43-4bb8-bcb1-d88ef3a576dd"),
                            ParameterAnswer = "True",
                            ParameterName = "Is_Residential",
                            RowNo = 1,
                            SessionId = new Guid("024512ec-6b91-4165-bb6a-0cfe9dc0965c"),
                            SessionType = "Qsr"
                        },
                        new
                        {
                            AnswerId = new Guid("6bf54fcb-3ef5-4c85-b82f-97a3b6ccb95f"),
                            ParameterAnswer = "True",
                            ParameterName = "Is_EnlargementImprovementAlteration",
                            RowNo = 2,
                            SessionId = new Guid("024512ec-6b91-4165-bb6a-0cfe9dc0965c"),
                            SessionType = "Qsr"
                        },
                        new
                        {
                            AnswerId = new Guid("7b4886ce-d3c4-45b7-87bb-eb9c8029a523"),
                            ParameterAnswer = "True",
                            ParameterName = "Is_EnlargementImprovementAlteration_Single",
                            RowNo = 3,
                            SessionId = new Guid("024512ec-6b91-4165-bb6a-0cfe9dc0965c"),
                            SessionType = "Qsr"
                        },
                        new
                        {
                            AnswerId = new Guid("a2dfed53-5d34-49ab-9802-8274328a7f77"),
                            ParameterAnswer = "True",
                            ParameterName = "Is_NewDwellings",
                            RowNo = 4,
                            SessionId = new Guid("d275c80e-9805-4471-919b-fb022b0922fb"),
                            SessionType = "Qsr"
                        },
                        new
                        {
                            AnswerId = new Guid("4c9fa391-05fa-4cde-b79e-209261a617cf"),
                            ParameterAnswer = "3",
                            ParameterName = "Num_NewDwellings",
                            RowNo = 5,
                            SessionId = new Guid("d275c80e-9805-4471-919b-fb022b0922fb"),
                            SessionType = "Qsr"
                        },
                        new
                        {
                            AnswerId = new Guid("0bc644a9-9045-41b7-af89-91ea58c3b6f3"),
                            ParameterAnswer = "False",
                            ParameterName = "Is_NewDwellings",
                            RowNo = 6,
                            SessionId = new Guid("c73d98cf-0914-43db-a4ce-62f379f90ccf"),
                            SessionType = "Qsr"
                        },
                        new
                        {
                            AnswerId = new Guid("7a5ae97f-f0a8-462f-8ba6-86ce3b54ee62"),
                            ParameterAnswer = "0",
                            ParameterName = "Num_NewDwellings",
                            RowNo = 7,
                            SessionId = new Guid("c73d98cf-0914-43db-a4ce-62f379f90ccf"),
                            SessionType = "Qsr"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories","dbo");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("6abc716e-7481-4993-84de-da80a385d096"),
                            CategoryName = "FeeRules",
                            Sequence = 1
                        },
                        new
                        {
                            CategoryId = new Guid("98e61c33-50c3-4540-8be7-e5c28ea5a664"),
                            CategoryName = "ConcessionRules",
                            Sequence = 2
                        },
                        new
                        {
                            CategoryId = new Guid("a8d9d6a1-263d-4ccb-a328-2547846f3122"),
                            CategoryName = "ServiceChargeRules",
                            Sequence = 3
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.DefPackage", b =>
                {
                    b.Property<Guid>("DefPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DefPackageId");

                    b.ToTable("DefPackages","dbo");

                    b.HasData(
                        new
                        {
                            DefPackageId = new Guid("97549ee2-4da5-4439-ae02-3190d233d400"),
                            CreatedBy = new Guid("9079c5b4-6825-48b2-9730-e40a7ca247d6"),
                            CreatedDate = new DateTime(2020, 5, 7, 13, 9, 29, 144, DateTimeKind.Utc).AddTicks(7303),
                            FileName = "Test_Package_20200504",
                            Status = "Draft"
                        },
                        new
                        {
                            DefPackageId = new Guid("1209b615-dd9c-4565-a5ff-5c9385d78179"),
                            CreatedBy = new Guid("9079c5b4-6825-48b2-9730-e40a7ca247d6"),
                            CreatedDate = new DateTime(2020, 5, 7, 13, 9, 29, 144, DateTimeKind.Utc).AddTicks(9085),
                            FileName = "Test_Package_20200503",
                            Status = "Live"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.OutputOperationType", b =>
                {
                    b.Property<Guid>("OutputOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OutputOperationId");

                    b.ToTable("OutputOperationTypes","dbo");

                    b.HasData(
                        new
                        {
                            OutputOperationId = new Guid("10380bc9-98dd-49c2-b9ca-b0d316f9707a"),
                            Name = "add"
                        },
                        new
                        {
                            OutputOperationId = new Guid("ccfcb7fc-4705-4cf6-904e-cd2bc382ab9e"),
                            Name = "overwrite"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.ParamDataType", b =>
                {
                    b.Property<Guid>("ParamDataTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParamDataTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParamDataTypeId");

                    b.ToTable("ParamDataTypes","dbo");

                    b.HasData(
                        new
                        {
                            ParamDataTypeId = new Guid("d97c5bd8-a109-49a8-ba5d-c9ee3ebdff44"),
                            ParamDataTypeName = "bool"
                        },
                        new
                        {
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            ParamDataTypeName = "number"
                        },
                        new
                        {
                            ParamDataTypeId = new Guid("c44ec053-0681-449b-9c1b-b5d86782f645"),
                            ParamDataTypeName = "int"
                        },
                        new
                        {
                            ParamDataTypeId = new Guid("2eba37d4-be44-4fc7-bb92-ed583d044917"),
                            ParamDataTypeName = "string"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Parameter", b =>
                {
                    b.Property<Guid>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MasterValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParamDataTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterId");

                    b.HasIndex("ParamDataTypeId");

                    b.ToTable("Parameters","dbo");

                    b.HasData(
                        new
                        {
                            ParameterId = new Guid("7d295774-0416-4e1e-bc62-700cda2a2ee1"),
                            MasterValue = "False",
                            Name = "Is_Residential",
                            ParamDataTypeId = new Guid("d97c5bd8-a109-49a8-ba5d-c9ee3ebdff44"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("b8867ff4-68a2-4701-8c2f-13ec4894325c"),
                            MasterValue = "False",
                            Name = "Is_EnlargementImprovementAlteration",
                            ParamDataTypeId = new Guid("d97c5bd8-a109-49a8-ba5d-c9ee3ebdff44"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("8fb50861-7771-4ada-bfe0-5204cd6a0d37"),
                            MasterValue = "False",
                            Name = "Is_EnlargementImprovementAlteration_Single",
                            ParamDataTypeId = new Guid("d97c5bd8-a109-49a8-ba5d-c9ee3ebdff44"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("7badd72d-8ac5-4092-a355-86c7cd4c20bf"),
                            MasterValue = "False",
                            Name = "Is_EnlargementImprovementAlteration_Multiple",
                            ParamDataTypeId = new Guid("d97c5bd8-a109-49a8-ba5d-c9ee3ebdff44"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("2136c508-cc8e-434b-8625-ac6e7def4975"),
                            MasterValue = "206",
                            Name = "EnlargementImprovementAlterationSingleCharge",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("ef18b0af-8728-47d1-b208-8daf71b53cd0"),
                            MasterValue = "407",
                            Name = "EnlargementImprovementAlterationMultipleCharge",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("572274f5-d74f-4434-bb1f-f128211a7bae"),
                            MasterValue = "0",
                            Name = "OtherMixedDevelopmentFee",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("8183098a-b038-4a66-9e82-b93f24569c24"),
                            MasterValue = "False",
                            Name = "Is_NewDwellings",
                            ParamDataTypeId = new Guid("d97c5bd8-a109-49a8-ba5d-c9ee3ebdff44"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("76d0e766-2c0a-4163-b143-488e446ac2f5"),
                            MasterValue = "0",
                            Name = "Num_NewDwellings",
                            ParamDataTypeId = new Guid("c44ec053-0681-449b-9c1b-b5d86782f645"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("52b39cf0-1fae-42e2-ae55-538d5b7dfa7b"),
                            MasterValue = "462",
                            Name = "NewDwellingCharge",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("7c9c3444-a2ad-477d-ac2a-452552dd7f37"),
                            MasterValue = "22859",
                            Name = "NewDwellingFlatCharge",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("883a763f-7691-42ea-9624-fa604f269002"),
                            MasterValue = "22859",
                            Name = "AdditionalNewDwellingCharge",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("9289df0a-ee97-4dfd-b010-94f52f045d47"),
                            MasterValue = "300000",
                            Name = "MaxNewDwellingCharge",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        },
                        new
                        {
                            ParameterId = new Guid("3ad48391-a19a-4a8d-86ae-91cad4819cec"),
                            MasterValue = "0",
                            Name = "ResidentialFee",
                            ParamDataTypeId = new Guid("835187eb-99cf-4077-94d7-369d0fd4ecd7"),
                            Product = "PP2",
                            Tenant = "England"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.ParameterType", b =>
                {
                    b.Property<Guid>("ParameterTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterTypeId");

                    b.ToTable("ParameterTypes","dbo");

                    b.HasData(
                        new
                        {
                            ParameterTypeId = new Guid("6c6b863f-728f-444c-802c-d1b66d92d7f3"),
                            Name = "in"
                        },
                        new
                        {
                            ParameterTypeId = new Guid("7e4f3023-43bb-41dc-9cf5-7f873a04c2fc"),
                            Name = "out"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.QSCollectionTypeRuleMapping", b =>
                {
                    b.Property<Guid>("QSCollectionTypeRuleMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApplicationTypeRefNo")
                        .HasColumnType("int");

                    b.Property<string>("QSCollectionVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RuleDefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QSCollectionTypeRuleMappingId");

                    b.HasIndex("RuleDefId");

                    b.ToTable("QSCollectionTypeRuleMappings","dbo");

                    b.HasData(
                        new
                        {
                            QSCollectionTypeRuleMappingId = new Guid("5369b12a-e07a-418d-af22-f8e1e6bca9e7"),
                            ApplicationTypeRefNo = 1,
                            QSCollectionVersion = "1.0",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f")
                        },
                        new
                        {
                            QSCollectionTypeRuleMappingId = new Guid("f501fb97-4936-4635-a998-d715069e42cd"),
                            ApplicationTypeRefNo = 2,
                            QSCollectionVersion = "1.0",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79")
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.QSRuleMapping", b =>
                {
                    b.Property<Guid>("QSRuleMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QSNo")
                        .HasColumnType("int");

                    b.Property<string>("QSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RuleDefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QSRuleMappingId");

                    b.HasIndex("RuleDefId");

                    b.ToTable("QSRuleMapping","dbo");

                    b.HasData(
                        new
                        {
                            QSRuleMappingId = new Guid("f1e6a032-3b78-4a10-bd35-7157556a422e"),
                            QSNo = 1,
                            QSVersion = "1.0",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f")
                        },
                        new
                        {
                            QSRuleMappingId = new Guid("791388a4-cf41-44f6-b435-4a85305f84ee"),
                            QSNo = 2,
                            QSVersion = "1.0",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79")
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Qsr", b =>
                {
                    b.Property<Guid>("QsrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QSCollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QsrId");

                    b.ToTable("Qsr","dbo");

                    b.HasData(
                        new
                        {
                            QsrId = new Guid("f59d9eea-e696-4e75-adf5-4d2254187e58"),
                            CreateDate = new DateTime(2020, 5, 7, 13, 9, 29, 149, DateTimeKind.Utc).AddTicks(1349),
                            CreatedBy = new Guid("c906f3bb-ceb3-4e21-97f5-4a77e93adda0"),
                            QSCollectionId = new Guid("e251d256-a218-4029-a914-405c750e9911")
                        },
                        new
                        {
                            QsrId = new Guid("7fd1318f-0694-4abc-826f-3fef22f0bc3c"),
                            CreateDate = new DateTime(2020, 5, 7, 13, 9, 29, 149, DateTimeKind.Utc).AddTicks(2415),
                            CreatedBy = new Guid("c906f3bb-ceb3-4e21-97f5-4a77e93adda0"),
                            QSCollectionId = new Guid("e251d256-a218-4029-a914-405c750e9911")
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDef", b =>
                {
                    b.Property<Guid>("RuleDefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DefPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceId")
                        .HasColumnType("int");

                    b.Property<string>("RuleDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RuleDefId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DefPackageId");

                    b.ToTable("RuleDefs","dbo");

                    b.HasData(
                        new
                        {
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            CategoryId = new Guid("6abc716e-7481-4993-84de-da80a385d096"),
                            CreatedBy = new Guid("9079c5b4-6825-48b2-9730-e40a7ca247d6"),
                            CreatedDate = new DateTime(2020, 5, 7, 13, 9, 29, 150, DateTimeKind.Utc).AddTicks(9031),
                            DefPackageId = new Guid("97549ee2-4da5-4439-ae02-3190d233d400"),
                            EndDate = new DateTime(2020, 5, 14, 13, 9, 29, 150, DateTimeKind.Utc).AddTicks(8490),
                            Product = "PP2",
                            ReferenceId = 1,
                            RuleDefinition = "if (Is_Residential && Is_EnlargementImprovementAlteration){if (Is_EnlargementImprovementAlteration_Single) {OtherMixedDevelopmentFee = EnlargementImprovementAlterationSingleCharge;Desc = 'Fee for enlargement, improvement or alteration of a flat: £' + EnlargementImprovementAlterationSingleCharge;}else if (Is_EnlargementImprovementAlteration_Multiple){OtherMixedDevelopmentFee = EnlargementImprovementAlterationMultipleCharge;Desc = 'Fee for enlargement, improvement or alteration of two or more dwellings: £' + EnlargementImprovementAlterationMultipleCharge}output = {'description': Desc,'outputparametervalue': OtherMixedDevelopmentFee};return JSON.stringify(output)}",
                            RuleName = "Residential Dwelling Alteration",
                            StartDate = new DateTime(2020, 5, 7, 13, 9, 29, 150, DateTimeKind.Utc).AddTicks(8061),
                            Tenant = "England"
                        },
                        new
                        {
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            CategoryId = new Guid("6abc716e-7481-4993-84de-da80a385d096"),
                            CreatedBy = new Guid("9079c5b4-6825-48b2-9730-e40a7ca247d6"),
                            CreatedDate = new DateTime(2020, 5, 7, 13, 9, 29, 151, DateTimeKind.Utc).AddTicks(62),
                            DefPackageId = new Guid("97549ee2-4da5-4439-ae02-3190d233d400"),
                            EndDate = new DateTime(2020, 5, 16, 13, 9, 29, 151, DateTimeKind.Utc).AddTicks(52),
                            Product = "PP2",
                            ReferenceId = 2,
                            RuleDefinition = "if (Is_Residential && Is_NewDwellings){if (!isNaN(Num_NewDwellings) && Num_NewDwellings <= 50) {ResidentialFee = parseInt(Num_NewDwellings) * NewDwellingCharge; Desc = '£' + NewDwellingCharge + ' per new dwelling';}else if (!isNaN(Num_NewDwellings) && Num_NewDwellings > 50) {ResidentialFee = Math.min(NewDwellingFlatCharge + (parseInt(Num_NewDwellings) - 50) * AdditionalNewDwellingCharge, MaxNewDwellingCharge);Desc = 'Fee = ' + NewDwellingFlatCharge + ' + £' + AdditionalNewDwellingCharge + ' for each additional dwellinghouse in excess of 50. Maximum total = £' + MaxNewDwellingCharge;}output = {'description': Desc,'outputparametervalue': ResidentialFee};return JSON.stringify(output)}",
                            RuleName = "Create New Dwellings",
                            StartDate = new DateTime(2020, 5, 7, 13, 9, 29, 151, DateTimeKind.Utc).AddTicks(7),
                            Tenant = "England"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDefParameterMapping", b =>
                {
                    b.Property<Guid>("RuleDefParameterMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFinalOutput")
                        .HasColumnType("bit");

                    b.Property<string>("OutputOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParameterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParameterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RuleDefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("RuleDefParameterMappingId");

                    b.HasIndex("ParameterId");

                    b.HasIndex("RuleDefId");

                    b.ToTable("RuleDefParameterMappings","dbo");

                    b.HasData(
                        new
                        {
                            RuleDefParameterMappingId = new Guid("87c47b82-019a-4741-8c20-1616480701a4"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("7d295774-0416-4e1e-bc62-700cda2a2ee1"),
                            ParameterType = "bool",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 1
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("ec4578df-b012-46e9-b28a-fc06ba7e53d5"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("b8867ff4-68a2-4701-8c2f-13ec4894325c"),
                            ParameterType = "bool",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 2
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("4159ab87-86e7-46ed-bee5-185d59e48192"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("8fb50861-7771-4ada-bfe0-5204cd6a0d37"),
                            ParameterType = "bool",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 3
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("b36f3a35-14e8-479d-be3a-77292ddff866"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("7badd72d-8ac5-4092-a355-86c7cd4c20bf"),
                            ParameterType = "bool",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 4
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("b99ac924-a5b8-4d1e-8c42-9f16c420ceef"),
                            IsFinalOutput = false,
                            OutputOperation = "Add",
                            ParameterId = new Guid("2136c508-cc8e-434b-8625-ac6e7def4975"),
                            ParameterType = "number",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 5
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("14b88f7c-4646-46d5-96ad-0b2bc60da853"),
                            IsFinalOutput = false,
                            OutputOperation = "Add",
                            ParameterId = new Guid("ef18b0af-8728-47d1-b208-8daf71b53cd0"),
                            ParameterType = "number",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 6
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("3d25792f-5bd8-4302-8b3d-4c2da5f85464"),
                            IsFinalOutput = false,
                            OutputOperation = "Add",
                            ParameterId = new Guid("572274f5-d74f-4434-bb1f-f128211a7bae"),
                            ParameterType = "number",
                            RuleDefId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            Sequence = 7
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("d443c0a2-c52f-46c9-8c48-9f42f9e30bd2"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("8183098a-b038-4a66-9e82-b93f24569c24"),
                            ParameterType = "bool",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 8
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("10b20383-a88a-488a-839c-41c49b8b298c"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("76d0e766-2c0a-4163-b143-488e446ac2f5"),
                            ParameterType = "int",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 9
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("459670f9-0c3c-4f82-b1a6-a3c6780dff0e"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("52b39cf0-1fae-42e2-ae55-538d5b7dfa7b"),
                            ParameterType = "number",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 10
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("1b4fd17c-8003-4ae6-b063-042160742c64"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("7c9c3444-a2ad-477d-ac2a-452552dd7f37"),
                            ParameterType = "number",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 11
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("bc8aa501-5628-450d-a8fe-cb7d7e919880"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("883a763f-7691-42ea-9624-fa604f269002"),
                            ParameterType = "number",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 12
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("665fa40d-7502-4b81-99ee-e5659675593f"),
                            IsFinalOutput = false,
                            OutputOperation = "",
                            ParameterId = new Guid("9289df0a-ee97-4dfd-b010-94f52f045d47"),
                            ParameterType = "number",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 13
                        },
                        new
                        {
                            RuleDefParameterMappingId = new Guid("55085277-bfd6-492c-be77-6fdf072e4f76"),
                            IsFinalOutput = false,
                            OutputOperation = "Add",
                            ParameterId = new Guid("3ad48391-a19a-4a8d-86ae-91cad4819cec"),
                            ParameterType = "number",
                            RuleDefId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            Sequence = 14
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.SessionType", b =>
                {
                    b.Property<Guid>("SessionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionTypeId");

                    b.ToTable("SessionTypes","dbo");

                    b.HasData(
                        new
                        {
                            SessionTypeId = new Guid("1145d244-fea5-45b0-9927-9c21dcd34566"),
                            Name = "TestSet"
                        },
                        new
                        {
                            SessionTypeId = new Guid("024512ec-6b91-4165-bb6a-0cfe9dc0965c"),
                            Name = "QSR"
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Step", b =>
                {
                    b.Property<Guid>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApplicationTypeRefId")
                        .HasColumnType("int");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inputs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFinalOutput")
                        .HasColumnType("bit");

                    b.Property<string>("Output")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputDataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputParamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RuleNo")
                        .HasColumnType("int");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StepId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RuleId");

                    b.ToTable("Steps","dbo");

                    b.HasData(
                        new
                        {
                            StepId = new Guid("92d9e4e7-7022-4676-8a8a-f25a6f84ce99"),
                            ApplicationTypeRefId = 1,
                            CategoryId = new Guid("6abc716e-7481-4993-84de-da80a385d096"),
                            Description = "Fee Rule 01 Residential dwellings alterations",
                            Inputs = "Is_Residential, Is_EnlargementImprovementAlteration, Is_EnlargementImprovementAlteration_Single, Is_EnlargementImprovementAlteration_Multiple, EnlargementImprovementAlterationSingleCharge, EnlargementImprovementAlterationMultipleCharge,",
                            IsFinalOutput = false,
                            Output = "OtherMixedDevelopmentFee",
                            OutputDataType = "number",
                            OutputParamName = "OtherMixedDevelopmentFee",
                            RuleId = new Guid("77b2a544-0c47-4e92-a82a-e0c51504db0f"),
                            RuleNo = 1,
                            SessionId = new Guid("024512ec-6b91-4165-bb6a-0cfe9dc0965c")
                        },
                        new
                        {
                            StepId = new Guid("add1ef8a-c30d-4555-9c37-b6bfc94b3e67"),
                            ApplicationTypeRefId = 1,
                            CategoryId = new Guid("6abc716e-7481-4993-84de-da80a385d096"),
                            Description = "Fee Rule 02 Create New Dwellings",
                            Inputs = "Is_NewDwellings, Num_NewDwellings, NewDwellingCharge, NewDwellingFlatCharge, AdditionalNewDwellingCharge, MaxNewDwellingCharge",
                            IsFinalOutput = false,
                            Output = "ResidentialFee",
                            OutputDataType = "number",
                            OutputParamName = "ResidentialFee",
                            RuleId = new Guid("dffd4f17-6643-41a8-b444-236f701eae79"),
                            RuleNo = 2,
                            SessionId = new Guid("024512ec-6b91-4165-bb6a-0cfe9dc0965c")
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.TestSetHeader", b =>
                {
                    b.Property<Guid>("TestSetHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TestSetHeaderId");

                    b.ToTable("TestSetHeaders","dbo");

                    b.HasData(
                        new
                        {
                            TestSetHeaderId = new Guid("cdd6da23-380d-4a70-8b34-c8a0d61417c3"),
                            CreatedDate = new DateTime(2020, 5, 7, 13, 9, 29, 154, DateTimeKind.Utc).AddTicks(5232),
                            FileName = "Test Set 1",
                            ModifiedBy = new Guid("9079c5b4-6825-48b2-9730-e40a7ca247d6")
                        },
                        new
                        {
                            TestSetHeaderId = new Guid("69c08242-2666-4dcd-a2f6-6874ac875aa8"),
                            CreatedDate = new DateTime(2020, 5, 7, 13, 9, 29, 154, DateTimeKind.Utc).AddTicks(6183),
                            FileName = "Test Set 2",
                            ModifiedBy = new Guid("9079c5b4-6825-48b2-9730-e40a7ca247d6")
                        });
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Parameter", b =>
                {
                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.ParamDataType", "ParamDataType")
                        .WithMany()
                        .HasForeignKey("ParamDataTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.QSCollectionTypeRuleMapping", b =>
                {
                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDef", "RuleDef")
                        .WithMany()
                        .HasForeignKey("RuleDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.QSRuleMapping", b =>
                {
                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDef", "RuleDef")
                        .WithMany()
                        .HasForeignKey("RuleDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDef", b =>
                {
                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.DefPackage", "DefPackage")
                        .WithMany()
                        .HasForeignKey("DefPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDefParameterMapping", b =>
                {
                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.Parameter", "Parameter")
                        .WithMany("RuleDefParameterMappings")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDef", "RuleDef")
                        .WithMany("RuleDefParameterMappings")
                        .HasForeignKey("RuleDefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TQ.Data.FeeCalculator.Schemas.Dbo.Step", b =>
                {
                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TQ.Data.FeeCalculator.Schemas.Dbo.RuleDef", "RuleDef")
                        .WithMany()
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
