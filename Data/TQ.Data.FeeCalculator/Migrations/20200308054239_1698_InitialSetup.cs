// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;
using System;
using System.Diagnostics.CodeAnalysis;

namespace TQ.Data.FeeCalculator.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class _1698_InitialSetup : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "dbo");

            migrationBuilder.CreateTable(
                name: "Answers",
                schema: "dbo",
                columns: table => new
                {
                    AnswerId = table.Column<Guid>(nullable: false),
                    ParameterName = table.Column<string>(nullable: true),
                    SessionType = table.Column<string>(nullable: true),
                    SessionId = table.Column<Guid>(nullable: false),
                    ParameterAnswer = table.Column<string>(nullable: true),
                    RowNo = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Answers", x => x.AnswerId);
                });

            migrationBuilder.CreateTable(
                name: "Categories",
                schema: "dbo",
                columns: table => new
                {
                    CategoryId = table.Column<Guid>(nullable: false),
                    CategoryName = table.Column<string>(nullable: true),
                    Sequence = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Categories", x => x.CategoryId);
                });

            migrationBuilder.CreateTable(
                name: "DefPackages",
                schema: "dbo",
                columns: table => new
                {
                    DefPackageId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false),
                    FileName = table.Column<string>(nullable: true),
                    Status = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefPackages", x => x.DefPackageId);
                });

            migrationBuilder.CreateTable(
                name: "ParamDataTypes",
                schema: "dbo",
                columns: table => new
                {
                    ParamDataTypeId = table.Column<Guid>(nullable: false),
                    ParamDataTypeName = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ParamDataTypes", x => x.ParamDataTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Qsr",
                schema: "dbo",
                columns: table => new
                {
                    QsrId = table.Column<Guid>(nullable: false),
                    QSCollectionId = table.Column<Guid>(nullable: false),
                    CreateDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Qsr", x => x.QsrId);
                });

            migrationBuilder.CreateTable(
                name: "TestSetHeaders",
                schema: "dbo",
                columns: table => new
                {
                    TestSetHeaderId = table.Column<Guid>(nullable: false),
                    FileName = table.Column<string>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSetHeaders", x => x.TestSetHeaderId);
                });

            migrationBuilder.CreateTable(
                name: "RuleDefs",
                schema: "dbo",
                columns: table => new
                {
                    RuleDefId = table.Column<Guid>(nullable: false),
                    DefPackageId = table.Column<Guid>(nullable: false),
                    ReferenceId = table.Column<int>(nullable: false),
                    RuleName = table.Column<string>(nullable: true),
                    RuleDefinition = table.Column<string>(nullable: true),
                    CategoryId = table.Column<Guid>(nullable: false),
                    Tenant = table.Column<string>(nullable: true),
                    Product = table.Column<string>(nullable: true),
                    StartDate = table.Column<DateTime>(nullable: false),
                    EndDate = table.Column<DateTime>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RuleDefs", x => x.RuleDefId);
                    table.ForeignKey(
                        name: "FK_RuleDefs_Categories_CategoryId",
                        column: x => x.CategoryId,
                        principalSchema: "dbo",
                        principalTable: "Categories",
                        principalColumn: "CategoryId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RuleDefs_DefPackages_DefPackageId",
                        column: x => x.DefPackageId,
                        principalSchema: "dbo",
                        principalTable: "DefPackages",
                        principalColumn: "DefPackageId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Parameters",
                schema: "dbo",
                columns: table => new
                {
                    ParameterId = table.Column<Guid>(nullable: false),
                    Name = table.Column<string>(nullable: true),
                    ParamDataTypeId = table.Column<Guid>(nullable: false),
                    Tenant = table.Column<string>(nullable: true),
                    Product = table.Column<string>(nullable: true),
                    MasterValue = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Parameters", x => x.ParameterId);
                    table.ForeignKey(
                        name: "FK_Parameters_ParamDataTypes_ParamDataTypeId",
                        column: x => x.ParamDataTypeId,
                        principalSchema: "dbo",
                        principalTable: "ParamDataTypes",
                        principalColumn: "ParamDataTypeId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QSCollectionTypeRuleMappings",
                schema: "dbo",
                columns: table => new
                {
                    QSCollectionTypeRuleMappingId = table.Column<Guid>(nullable: false),
                    ApplicationTypeRefNo = table.Column<int>(nullable: false),
                    QSCollectionVersion = table.Column<string>(nullable: true),
                    RuleDefId = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSCollectionTypeRuleMappings", x => x.QSCollectionTypeRuleMappingId);
                    table.ForeignKey(
                        name: "FK_QSCollectionTypeRuleMappings_RuleDefs_RuleDefId",
                        column: x => x.RuleDefId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QsRuleMapping",
                schema: "dbo",
                columns: table => new
                {
                    QSRuleMappingId = table.Column<Guid>(nullable: false),
                    QSNo = table.Column<int>(nullable: false),
                    QSVersion = table.Column<string>(nullable: true),
                    RuleDefId = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QsRuleMapping", x => x.QSRuleMappingId);
                    table.ForeignKey(
                        name: "FK_QsRuleMapping_RuleDefs_RuleDefId",
                        column: x => x.RuleDefId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Steps",
                schema: "dbo",
                columns: table => new
                {
                    StepId = table.Column<Guid>(nullable: false),
                    RuleId = table.Column<Guid>(nullable: false),
                    SessionType = table.Column<string>(nullable: true),
                    SessionId = table.Column<Guid>(nullable: false),
                    Description = table.Column<string>(nullable: true),
                    CategoryId = table.Column<Guid>(nullable: false),
                    ApplicationTypeRefId = table.Column<int>(nullable: false),
                    RuleNo = table.Column<int>(nullable: false),
                    Inputs = table.Column<string>(nullable: true),
                    Output = table.Column<string>(nullable: true),
                    OutputParamName = table.Column<string>(nullable: true),
                    OutputDataType = table.Column<string>(nullable: true),
                    IsFinalOutput = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Steps", x => x.StepId);
                    table.ForeignKey(
                        name: "FK_Steps_Categories_CategoryId",
                        column: x => x.CategoryId,
                        principalSchema: "dbo",
                        principalTable: "Categories",
                        principalColumn: "CategoryId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Steps_RuleDefs_RuleId",
                        column: x => x.RuleId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "RuleDefParameterMappings",
                schema: "dbo",
                columns: table => new
                {
                    RuleDefParameterMappingId = table.Column<Guid>(nullable: false),
                    RuleDefId = table.Column<Guid>(nullable: false),
                    ParameterId = table.Column<Guid>(nullable: false),
                    Sequence = table.Column<int>(nullable: false),
                    ParameterType = table.Column<string>(nullable: true),
                    OutputOperation = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RuleDefParameterMappings", x => x.RuleDefParameterMappingId);
                    table.ForeignKey(
                        name: "FK_RuleDefParameterMappings_Parameters_ParameterId",
                        column: x => x.ParameterId,
                        principalSchema: "dbo",
                        principalTable: "Parameters",
                        principalColumn: "ParameterId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RuleDefParameterMappings_RuleDefs_RuleDefId",
                        column: x => x.RuleDefId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Parameters_ParamDataTypeId",
                schema: "dbo",
                table: "Parameters",
                column: "ParamDataTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_QSCollectionTypeRuleMappings_RuleDefId",
                schema: "dbo",
                table: "QSCollectionTypeRuleMappings",
                column: "RuleDefId");

            migrationBuilder.CreateIndex(
                name: "IX_QsRuleMapping_RuleDefId",
                schema: "dbo",
                table: "QsRuleMapping",
                column: "RuleDefId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefParameterMappings_ParameterId",
                schema: "dbo",
                table: "RuleDefParameterMappings",
                column: "ParameterId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefParameterMappings_RuleDefId",
                schema: "dbo",
                table: "RuleDefParameterMappings",
                column: "RuleDefId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefs_CategoryId",
                schema: "dbo",
                table: "RuleDefs",
                column: "CategoryId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefs_DefPackageId",
                schema: "dbo",
                table: "RuleDefs",
                column: "DefPackageId");

            migrationBuilder.CreateIndex(
                name: "IX_Steps_CategoryId",
                schema: "dbo",
                table: "Steps",
                column: "CategoryId");

            migrationBuilder.CreateIndex(
                name: "IX_Steps_RuleId",
                schema: "dbo",
                table: "Steps",
                column: "RuleId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Answers",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "QSCollectionTypeRuleMappings",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Qsr",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "QsRuleMapping",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "RuleDefParameterMappings",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Steps",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "TestSetHeaders",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Parameters",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "RuleDefs",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "ParamDataTypes",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Categories",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "DefPackages",
                schema: "dbo");
        }
    }
}
