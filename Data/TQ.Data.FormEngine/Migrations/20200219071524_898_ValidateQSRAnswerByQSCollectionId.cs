// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;
using System.Diagnostics.CodeAnalysis;

namespace TQ.Data.FormEngine.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class _898_ValidateQSRAnswerByQSCollectionId : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            var strGetQuestionSetbyIdProc = @"CREATE PROCEDURE [dbo].[ValidateQSRAnswerByQSCollectionId] @QSCollectionId 
            UNIQUEIDENTIFIER 
            AS 
              BEGIN 
                  -- Variable Declaration  
                  DECLARE @QsrAnswerId UNIQUEIDENTIFIER 
                  DECLARE @FieldId UNIQUEIDENTIFIER 
                  DECLARE @FieldNo VARCHAR(max) 
                  DECLARE @QsrId UNIQUEIDENTIFIER 
                  DECLARE @Answer VARCHAR(max) 
                  DECLARE @FieldType VARCHAR(max) 
                  DECLARE @Display VARCHAR(max) 
                  DECLARE @DisplayConstraint VARCHAR(max) 
                  DECLARE @ConstraintRule VARCHAR(max) 
                  DECLARE @constraintrulecount VARCHAR(max) 
                  DECLARE @AnswerRule VARCHAR(max) 
                  DECLARE @answerrulecount VARCHAR(max) 
                  DECLARE @AnswerType VARCHAR(max) 
                  DECLARE @AnswerErrLabel VARCHAR(max) 
                  DECLARE @Min VARCHAR(max) 
                  DECLARE @Max VARCHAR(max) 
                  DECLARE @MinDate DATETIME 
                  DECLARE @MaxDate DATETIME 
                  DECLARE @Regex VARCHAR(max) 
                  DECLARE @fieldcount VARCHAR(max) 
                  DECLARE @FieldAnswerMatchCount VARCHAR(max) 	
            
                  DECLARE @UnMatchTemp TABLE 
                    ( 
                       fieldid      UNIQUEIDENTIFIER, 
                       errormessage VARCHAR(max) 
                    ) 
            
                  -- Cursor Declaration  
                  DECLARE db_qsrcursor CURSOR FOR 
                    -- Query For Cursor  
                   SELECT tempField.fieldid, 
                   fieldno, 
                   qsranswerid, 
                   QSRID, 
                   Answer, 
                   FieldType, 
                   display, 
                   displayconstraint, 
                   constraintrule, 
                   constraintrulecount, 
                   answerrule, 
                   answerrulecount, 
                   answertype, 
                   errlabel, 
            	   [Min],
            	   [Max],
                   fieldcount, 
                   FieldAnswerMatchCount 
            FROM   (SELECT DISTINCT fields.fieldid, 
                                    fields.fieldno, 
                                    qsranswerid, 
                                    qsr.qsrid, 
                                    answer, 
                                    (SELECT fieldtypes 
                                     FROM   [Forms].fieldtypes FT 
                                     WHERE  FT.fieldtypeid = fields.fieldtypeid)         AS 
                                           FieldType, 
                                    (SELECT displays 
                                     FROM   [Forms].displays 
                                     WHERE  displays.displayid = fields.displayid)       AS 
                                    Display 
                                           , 
                                    (SELECT[constraints] 
                                     FROM   [Forms].constraints C 
                                     WHERE  C.constraintid = fields.displayconstraintid) AS 
                                           DisplayConstraint, 
                                    (SELECT[rules] 
                                     FROM   [Forms].rules R 
                                     WHERE  R.ruleid = fields.constraintruleid)          AS 
                                           ConstraintRule, 
                                    fields.constraintrulecount, 
                                    (SELECT [rules] 
                                     FROM   [Forms].rules RU 
                                     WHERE  RU.ruleid = fields.answerruleid)             AS 
                                           AnswerRule, 
                                    fields.answerrulecount, 
                                    (SELECT TOP 1 answertypes 
                                     FROM   [Forms].answertypes 
                                     WHERE  answertypes.answertypeid = AG.answertypeid)  AS 
                                           AnswerType, 
                                    errlabel ,
            						[Min],
            						[Max]
                    FROM   [Sessions].qscollections QSC 
                           INNER JOIN [Sessions].qsr 
                                   ON QSC.qscollectionid = qsr.qscollectionid 
                           INNER JOIN [Forms].qssectionmappings QSM 
                                   ON qsr.qsid = QSM.qsid 
                           INNER JOIN [Forms].sectionfieldmappings SFM 
                                   ON QSM.sectionid = SFM.sectionid 
                           INNER JOIN [Forms].fields 
                                   ON SFM.fieldid = fields.fieldid 
                           LEFT JOIN [Sessions].qsranswers QSRA 
                                  ON fields.fieldid = QSRA.fieldid 
                                     AND qsr.qsrid = QSRA.qsrid 
                           LEFT JOIN [Forms].answerguides AG 
                                  ON fields.fieldid = AG.fieldid 
            					  AND ag.AnswerTypeId <> 3
                    WHERE  QSC.qscollectionid = @QSCollectionId) AS tempField 
                   LEFT JOIN (SELECT fieldid, 
                                     Count(fieldid) AS fieldcount, 
                                     Sum(CASE 
                                           WHEN answer = [value] AND Answer IS NOT NULL THEN 1 
                                           ELSE 0 
                                         END)       AS FieldAnswerMatchCount 
                              FROM   (SELECT DISTINCT FCI.fieldid, 
                                                      answer, 
                                                      QSA.qsrid, 
                                                      FAG.fieldid AS dependentfield, 
                                                      FAG.value 
                                      FROM   forms.fieldconstraints FCI 
                                             INNER JOIN forms.sectionfieldmappings SFM 
                                                     ON FCI.fieldid = SFM.fieldid 
                                             INNER JOIN forms.qssectionmappings QSSM 
                                                     ON SFM.sectionid = QSSM.sectionid 
                                             INNER JOIN sessions.qsr 
                                                     ON QSSM.qsid = qsr.qsid 
            										 AND Qsr.QSCollectionId=@QSCollectionId
                                             LEFT JOIN forms.answerguides FAG 
                                                    ON 
                                             FCI.dependantanswerguideid = FAG.answerguideid 
                                             LEFT JOIN sessions.qsranswers QSA 
                                                    ON FAG.fieldid = QSA.fieldid 
                                                       AND Qsr.QsrId = QSA.qsrid                         
                                     ) AS 
                                     FieldConstr 
                              GROUP  BY fieldid) AS tempFieldConst 
                          ON tempField.fieldid = tempFieldConst.fieldid 
            
            
            	 BEGIN TRY
                  --Open Cursor  
                  OPEN db_qsrcursor 
            
                  -- Go to Next Recored  
                  FETCH next FROM db_qsrcursor INTO @FieldId
            	  , @FieldNo	  
            	  , @QsrAnswerId 
            	  , @QsrId
                  ,  @Answer
            	  , @FieldType
            	  , @Display
            	  , @DisplayConstraint
            	  , @ConstraintRule
                  , @constraintrulecount
            	  , @AnswerRule
            	  , @answerrulecount
            	  , @AnswerType 
                  , @AnswerErrLabel 
            	  , @Min
            	  , @Max
            	  , @fieldcount
                  , @FieldAnswerMatchCount
            
                  WHILE @@FETCH_STATUS = 0 
                    BEGIN 
                        IF( @AnswerErrLabel IS NULL ) 
                          SET @AnswerErrLabel='error' 
            
                       
                              IF(@DisplayConstraint = 'Solo' AND  @Display = 'Required' AND ( @Answer = ''  OR @Answer IS NULL) ) 
                                INSERT INTO @UnMatchTemp 
                                            (fieldid, 
                                             errormessage) 
                                SELECT @FieldId, 
                                       @AnswerErrLabel 
            
            				ELSE IF(@DisplayConstraint = 'Depends' AND @Display = 'Required')
            					BEGIN 
            						IF((@ConstraintRule='All' AND @fieldcount=@FieldAnswerMatchCount AND  ( @Answer = ''  OR @Answer IS NULL))
            						OR (@ConstraintRule='Any' AND @constraintrulecount <= @FieldAnswerMatchCount AND  ( @Answer = ''  OR @Answer IS NULL)))
            						       INSERT INTO @UnMatchTemp 
            						                   (fieldid, 
            						                    errormessage) 
            						       SELECT @FieldId, 
            						              @AnswerErrLabel 
            				    END
            				ELSE
            					BEGIN
            					SET @DisplayConstraint=@DisplayConstraint --Do nothing
            					END
            
            				IF( @Answer IS NOT NULL AND  @Answer <>'')
            				BEGIN
                              IF( @AnswerType = 'Length' OR @AnswerType = 'Range') 
                                BEGIN                        								
            						IF( @AnswerType = 'Length')
            						Set @Answer = LEN(@Answer)
            
            						IF(ISNUMERIC(@Answer) <>1)
            							INSERT INTO @UnMatchTemp 
            							              (fieldid, 
            							               errormessage) 
            							  SELECT @FieldId, 
            							         @AnswerErrLabel 
            
                                  ELSE IF(@Min IS NOT NULL AND @Max IS NOT NULL AND convert(decimal(20,2),@Answer) NOT BETWEEN convert(decimal(20,2),@Min) AND convert(decimal(20,2),@Max) ) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
            
                                    ELSE IF( @Min IS NOT NULL AND convert(decimal(20,2),@Answer) < convert(decimal(20,2),@Min )) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
            
                                    ELSE IF( @Max IS NOT NULL  AND convert(decimal(20,2),@Answer) > convert(decimal(20,2),@Max ) )						
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 						  
                                             @AnswerErrLabel 
            
                                    
                                END 
            
                            ELSE  IF ( @AnswerType = 'Value' ) 
                                BEGIN 
                                    IF NOT EXISTS(SELECT * 
                                                  FROM   [Forms].answerguides 
                                                  WHERE  fieldid = @FieldId 
                                                         AND [value] = @Answer) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
                                END 
            
                             ELSE IF( @AnswerType = 'Regex BE' ) 
                                BEGIN 
                                    SELECT @Regex = [value] 
                                    FROM   [Forms].answerguides 
                                    WHERE  fieldid = @FieldId 
                                           AND answertypeid = 4 
            
                                    IF ( @Answer NOT LIKE @Regex ) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
                                END 
            
                             ELSE IF( @AnswerType = 'Date') 
                                BEGIN                    
            					     IF(ISDATE(@Answer) = 1)
            					  BEGIN 
                                    SELECT @MinDate = CASE 
                                                        WHEN @Min IS NULL THEN @Min 
                                                        WHEN @Min = 'today' THEN Getdate() 
                                                        WHEN Isdate(@Min) = 1 THEN @Min 
            											--WHEN Isdate(@Min) = 1 and CONVERT(DATE, @Min) < CONVERT(DATE, GETDATE()) THEN GETDATE()
                                                        ELSE CONVERT(DATETIME, 
                                                             (SELECT TOP 1 answer 
                                                              FROM 
                                                             [Sessions].qsranswers 
                                                                                WHERE 
                                                             fieldid = @Min 
                                                             AND qsrid = @QsrId) 
                                                             ) 
                                                      END 
            
                                    SELECT @MaxDate = CASE 
                                                        WHEN @Max IS NULL THEN @Max 
            										    WHEN @Max = 'today' THEN Getdate() 
                                                        WHEN Isdate(@Max) = 1 THEN @Max 
                                                        ELSE CONVERT(DATETIME, 
                                                             (SELECT TOP 1 answer 
                                                              FROM 
                                                             [Sessions].qsranswers 
                                                                                WHERE 
                                                             fieldid = @Max 
                                                             AND qsrid = @QsrId) 
                                                             ) 
                                                      END 
            
                                    IF( ( @MinDate IS NOT NULL  AND @MaxDate IS NOT NULL ) 
            						 AND CONVERT(DATE, @Answer) NOT BETWEEN  CONVERT(DATE, @MinDate) AND   CONVERT(DATE, @MaxDate) ) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
            
                                    ELSE IF( @MinDate IS NOT NULL AND CONVERT(DATE, @Answer) < CONVERT(DATE, @MinDate) ) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
            
                                    ELSE IF( @MaxDate IS NOT NULL AND CONVERT(DATE, @Answer) > CONVERT(DATE, @MaxDate)  ) 
                                      INSERT INTO @UnMatchTemp 
                                                  (fieldid, 
                                                   errormessage) 
                                      SELECT @FieldId, 
                                             @AnswerErrLabel 
                                    ELSE
            						set @Answer=@Answer
            					END
            						ELSE
            							 BEGIN
            							  INSERT INTO @UnMatchTemp 
            							                 (fieldid, 
            							                  errormessage) 
            							     SELECT @FieldId, 
            							            @AnswerErrLabel 
            							 END 
            				    END 
                           
            
            			   ELSE
            			   BEGIN
            			   set @Answer=@Answer
            			   END
            			   END
                        FETCH next FROM db_qsrcursor INTO @FieldId
            			, @FieldNo			
                        , @QsrAnswerId 
            			, @QsrId 
                        , @Answer
            			, @FieldType
            			, @Display
            			, @DisplayConstraint
            			, @ConstraintRule 
                        , @constraintrulecount
            			, @AnswerRule
            			, @answerrulecount
            			, @AnswerType 
                        , @AnswerErrLabel 
            			, @Min
            			, @Max
            			, @fieldcount
            			, @FieldAnswerMatchCount
                    END 
            
                  -- Close Cursor  
                  CLOSE db_qsrcursor 
            
                  DEALLOCATE db_qsrcursor 
            
                  --return 1 if no error else 0  
                  IF NOT EXISTS(SELECT * 
                                FROM   @UnMatchTemp) 
                    BEGIN 
                        IF ( @QsrId IS NOT NULL ) 
                          SELECT 1 
                        ELSE 
                          SELECT 0 
                    END 
                  ELSE 
                    BEGIN 
                        SELECT 0 
                    END 
            
                  SELECT distinct * 
                  FROM   @UnMatchTemp 
            
            	  END TRY
                 BEGIN CATCH
            	    CLOSE db_qsrcursor 
                    DEALLOCATE db_qsrcursor 
            		SELECT 0 
                 END CATCH
             END";
            strGetQuestionSetbyIdProc = strGetQuestionSetbyIdProc.Replace("'", "''");
            migrationBuilder.Sql($"EXEC ('{strGetQuestionSetbyIdProc}')");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            var strGetQuestionSetbyIdProc = "DROP PROCEDURE [dbo].[GetQsrFieldsforLatestVersion];";
            strGetQuestionSetbyIdProc = strGetQuestionSetbyIdProc.Replace("'", "''");
            migrationBuilder.Sql($"EXEC ('{strGetQuestionSetbyIdProc}')");
        }
    }
}
