// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;
using System;
using System.Diagnostics.CodeAnalysis;

namespace TQ.Data.FormEngine.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class _894_CreateFormEngineSchemaTables : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "dbo");

            migrationBuilder.EnsureSchema(
                name: "forms");

            migrationBuilder.EnsureSchema(
                name: "sessions");

            migrationBuilder.CreateTable(
                name: "ApplicationTypes",
                schema: "dbo",
                columns: table => new
                {
                    ApplicationTypeId = table.Column<Guid>(nullable: false),
                    ApplicationTypeName = table.Column<string>(nullable: true),
                    Country = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationTypes", x => x.ApplicationTypeId);
                });

            migrationBuilder.CreateTable(
                name: "QuestionSets",
                schema: "dbo",
                columns: table => new
                {
                    QuestionSetId = table.Column<Guid>(nullable: false),
                    Definition = table.Column<string>(nullable: true),
                    LanguageId = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QuestionSets", x => x.QuestionSetId);
                });

            migrationBuilder.CreateTable(
                name: "AnswerTypes",
                schema: "forms",
                columns: table => new
                {
                    AnswerTypeId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AnswerTypes = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AnswerTypes", x => x.AnswerTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Constraints",
                schema: "forms",
                columns: table => new
                {
                    ConstraintId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Constraints = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Constraints", x => x.ConstraintId);
                });

            migrationBuilder.CreateTable(
                name: "Displays",
                schema: "forms",
                columns: table => new
                {
                    DisplayId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Displays = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Displays", x => x.DisplayId);
                });

            migrationBuilder.CreateTable(
                name: "FieldTypes",
                schema: "forms",
                columns: table => new
                {
                    FieldTypeId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FieldTypes = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FieldTypes", x => x.FieldTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Functions",
                schema: "forms",
                columns: table => new
                {
                    FunctionsId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Functions = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Functions", x => x.FunctionsId);
                });

            migrationBuilder.CreateTable(
                name: "QSCollectionTypes",
                schema: "forms",
                columns: table => new
                {
                    QSCollectionTypeId = table.Column<Guid>(nullable: false),
                    Label = table.Column<string>(nullable: true),
                    Helptext = table.Column<string>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    CountryCode = table.Column<string>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSCollectionTypes", x => x.QSCollectionTypeId);
                });

            migrationBuilder.CreateTable(
                name: "QSTypes",
                schema: "forms",
                columns: table => new
                {
                    QSTypeId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QSTypes = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSTypes", x => x.QSTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Rules",
                schema: "forms",
                columns: table => new
                {
                    RuleId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Rules = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Rules", x => x.RuleId);
                });

            migrationBuilder.CreateTable(
                name: "SectionTypes",
                schema: "forms",
                columns: table => new
                {
                    SectionTypeId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SectionTypes = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SectionTypes", x => x.SectionTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Status",
                schema: "forms",
                columns: table => new
                {
                    StatusId = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Status = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Status", x => x.StatusId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationQuestionSetMappings",
                schema: "dbo",
                columns: table => new
                {
                    MappingId = table.Column<Guid>(nullable: false),
                    ApplicationTypeId = table.Column<Guid>(nullable: false),
                    QuestionSetId = table.Column<Guid>(nullable: false),
                    Priority = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationQuestionSetMappings", x => x.MappingId);
                    table.ForeignKey(
                        name: "FK_ApplicationQuestionSetMappings_ApplicationTypes_ApplicationTypeId",
                        column: x => x.ApplicationTypeId,
                        principalSchema: "dbo",
                        principalTable: "ApplicationTypes",
                        principalColumn: "ApplicationTypeId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ApplicationQuestionSetMappings_QuestionSets_QuestionSetId",
                        column: x => x.QuestionSetId,
                        principalSchema: "dbo",
                        principalTable: "QuestionSets",
                        principalColumn: "QuestionSetId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QSCollections",
                schema: "sessions",
                columns: table => new
                {
                    QSCollectionId = table.Column<Guid>(nullable: false),
                    UserId = table.Column<Guid>(nullable: false),
                    ApplicationName = table.Column<string>(nullable: true),
                    RefNo = table.Column<string>(nullable: true),
                    QSCollectionTypeId = table.Column<Guid>(nullable: false),
                    Status = table.Column<string>(nullable: true),
                    CountryCode = table.Column<string>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSCollections", x => x.QSCollectionId);
                    table.ForeignKey(
                        name: "FK_QSCollections_QSCollectionTypes_QSCollectionTypeId",
                        column: x => x.QSCollectionTypeId,
                        principalSchema: "forms",
                        principalTable: "QSCollectionTypes",
                        principalColumn: "QSCollectionTypeId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Fields",
                schema: "forms",
                columns: table => new
                {
                    FieldId = table.Column<Guid>(nullable: false),
                    FieldNo = table.Column<int>(nullable: false),
                    FieldVersion = table.Column<string>(nullable: true),
                    Label = table.Column<string>(nullable: true),
                    Helptext = table.Column<string>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    FieldTypeId = table.Column<int>(nullable: true),
                    DisplayId = table.Column<int>(nullable: true),
                    DisplayConstraintId = table.Column<int>(nullable: true),
                    ConstraintRuleId = table.Column<int>(nullable: true),
                    ConstraintRuleCount = table.Column<int>(nullable: true),
                    AnswerRuleId = table.Column<int>(nullable: true),
                    AnswerRuleCount = table.Column<int>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false),
                    Parameter = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Fields", x => x.FieldId);
                    table.ForeignKey(
                        name: "FK_Fields_Rules_AnswerRuleId",
                        column: x => x.AnswerRuleId,
                        principalSchema: "forms",
                        principalTable: "Rules",
                        principalColumn: "RuleId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Fields_Rules_ConstraintRuleId",
                        column: x => x.ConstraintRuleId,
                        principalSchema: "forms",
                        principalTable: "Rules",
                        principalColumn: "RuleId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Fields_Constraints_DisplayConstraintId",
                        column: x => x.DisplayConstraintId,
                        principalSchema: "forms",
                        principalTable: "Constraints",
                        principalColumn: "ConstraintId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Fields_Displays_DisplayId",
                        column: x => x.DisplayId,
                        principalSchema: "forms",
                        principalTable: "Displays",
                        principalColumn: "DisplayId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Fields_FieldTypes_FieldTypeId",
                        column: x => x.FieldTypeId,
                        principalSchema: "forms",
                        principalTable: "FieldTypes",
                        principalColumn: "FieldTypeId",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Sections",
                schema: "forms",
                columns: table => new
                {
                    SectionId = table.Column<Guid>(nullable: false),
                    Label = table.Column<string>(nullable: true),
                    Helptext = table.Column<string>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    SectionTypeId = table.Column<int>(nullable: false),
                    RuleId = table.Column<int>(nullable: true),
                    RuleCount = table.Column<int>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Sections", x => x.SectionId);
                    table.ForeignKey(
                        name: "FK_Sections_Rules_RuleId",
                        column: x => x.RuleId,
                        principalSchema: "forms",
                        principalTable: "Rules",
                        principalColumn: "RuleId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Sections_SectionTypes_SectionTypeId",
                        column: x => x.SectionTypeId,
                        principalSchema: "forms",
                        principalTable: "SectionTypes",
                        principalColumn: "SectionTypeId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QS",
                schema: "forms",
                columns: table => new
                {
                    QSId = table.Column<Guid>(nullable: false),
                    QSNo = table.Column<int>(nullable: false),
                    QSVersion = table.Column<string>(nullable: true),
                    QSName = table.Column<string>(nullable: true),
                    Label = table.Column<string>(nullable: true),
                    Helptext = table.Column<string>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    StatusId = table.Column<int>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false),
                    QSTypeId = table.Column<int>(nullable: true),
                    FileLocation = table.Column<string>(nullable: true),
                    TaxonomyLocation = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QS", x => x.QSId);
                    table.ForeignKey(
                        name: "FK_QS_QSTypes_QSTypeId",
                        column: x => x.QSTypeId,
                        principalSchema: "forms",
                        principalTable: "QSTypes",
                        principalColumn: "QSTypeId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_QS_Status_StatusId",
                        column: x => x.StatusId,
                        principalSchema: "forms",
                        principalTable: "Status",
                        principalColumn: "StatusId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AnswerGuides",
                schema: "forms",
                columns: table => new
                {
                    AnswerGuideId = table.Column<Guid>(nullable: false),
                    FieldId = table.Column<Guid>(nullable: false),
                    AnswerTypeId = table.Column<int>(nullable: false),
                    Min = table.Column<string>(nullable: true),
                    Max = table.Column<string>(nullable: true),
                    Label = table.Column<string>(nullable: true),
                    Value = table.Column<string>(nullable: true),
                    IsDefault = table.Column<string>(nullable: true),
                    Sequence = table.Column<int>(nullable: false),
                    ErrLabel = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AnswerGuides", x => x.AnswerGuideId);
                    table.ForeignKey(
                        name: "FK_AnswerGuides_AnswerTypes_AnswerTypeId",
                        column: x => x.AnswerTypeId,
                        principalSchema: "forms",
                        principalTable: "AnswerTypes",
                        principalColumn: "AnswerTypeId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_AnswerGuides_Fields_FieldId",
                        column: x => x.FieldId,
                        principalSchema: "forms",
                        principalTable: "Fields",
                        principalColumn: "FieldId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FieldAggregations",
                schema: "forms",
                columns: table => new
                {
                    FieldAggregationId = table.Column<Guid>(nullable: false),
                    FieldId = table.Column<Guid>(nullable: false),
                    AggregatedFieldId = table.Column<Guid>(nullable: false),
                    FunctionId = table.Column<int>(nullable: false),
                    Sequence = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FieldAggregations", x => x.FieldAggregationId);
                    table.ForeignKey(
                        name: "FK_FieldAggregations_Fields_FieldId",
                        column: x => x.FieldId,
                        principalSchema: "forms",
                        principalTable: "Fields",
                        principalColumn: "FieldId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_FieldAggregations_Functions_FunctionId",
                        column: x => x.FunctionId,
                        principalSchema: "forms",
                        principalTable: "Functions",
                        principalColumn: "FunctionsId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FieldConstraints",
                schema: "forms",
                columns: table => new
                {
                    FieldConstraintId = table.Column<Guid>(nullable: false),
                    FieldId = table.Column<Guid>(nullable: false),
                    DependantAnswerGuideId = table.Column<string>(nullable: true),
                    SubSectionId = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FieldConstraints", x => x.FieldConstraintId);
                    table.ForeignKey(
                        name: "FK_FieldConstraints_Fields_FieldId",
                        column: x => x.FieldId,
                        principalSchema: "forms",
                        principalTable: "Fields",
                        principalColumn: "FieldId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SectionFieldMappings",
                schema: "forms",
                columns: table => new
                {
                    SectionFieldMappingId = table.Column<Guid>(nullable: false),
                    SectionId = table.Column<Guid>(nullable: false),
                    FieldId = table.Column<Guid>(nullable: false),
                    FieldNo = table.Column<string>(nullable: true),
                    Sequence = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SectionFieldMappings", x => x.SectionFieldMappingId);
                    table.ForeignKey(
                        name: "FK_SectionFieldMappings_Fields_FieldId",
                        column: x => x.FieldId,
                        principalSchema: "forms",
                        principalTable: "Fields",
                        principalColumn: "FieldId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_SectionFieldMappings_Sections_SectionId",
                        column: x => x.SectionId,
                        principalSchema: "forms",
                        principalTable: "Sections",
                        principalColumn: "SectionId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QSCollectionMappings",
                schema: "forms",
                columns: table => new
                {
                    QSCollectionMappingId = table.Column<Guid>(nullable: false),
                    QSCollectionTypeId = table.Column<Guid>(nullable: false),
                    QSId = table.Column<Guid>(nullable: false),
                    QSNo = table.Column<int>(nullable: false),
                    Sequence = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSCollectionMappings", x => x.QSCollectionMappingId);
                    table.ForeignKey(
                        name: "FK_QSCollectionMappings_QSCollectionTypes_QSCollectionTypeId",
                        column: x => x.QSCollectionTypeId,
                        principalSchema: "forms",
                        principalTable: "QSCollectionTypes",
                        principalColumn: "QSCollectionTypeId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_QSCollectionMappings_QS_QSId",
                        column: x => x.QSId,
                        principalSchema: "forms",
                        principalTable: "QS",
                        principalColumn: "QSId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QSSectionMappings",
                schema: "forms",
                columns: table => new
                {
                    QSSectionMappingId = table.Column<Guid>(nullable: false),
                    QSId = table.Column<Guid>(nullable: false),
                    SectionId = table.Column<Guid>(nullable: false),
                    Sequence = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSSectionMappings", x => x.QSSectionMappingId);
                    table.ForeignKey(
                        name: "FK_QSSectionMappings_QS_QSId",
                        column: x => x.QSId,
                        principalSchema: "forms",
                        principalTable: "QS",
                        principalColumn: "QSId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_QSSectionMappings_Sections_SectionId",
                        column: x => x.SectionId,
                        principalSchema: "forms",
                        principalTable: "Sections",
                        principalColumn: "SectionId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QSR",
                schema: "sessions",
                columns: table => new
                {
                    QsrId = table.Column<Guid>(nullable: false),
                    QSId = table.Column<Guid>(nullable: false),
                    QSNo = table.Column<int>(nullable: false),
                    QSVersion = table.Column<string>(nullable: true),
                    QSCollectionId = table.Column<Guid>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSR", x => x.QsrId);
                    table.ForeignKey(
                        name: "FK_QSR_QSCollections_QSCollectionId",
                        column: x => x.QSCollectionId,
                        principalSchema: "sessions",
                        principalTable: "QSCollections",
                        principalColumn: "QSCollectionId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_QSR_QS_QSId",
                        column: x => x.QSId,
                        principalSchema: "forms",
                        principalTable: "QS",
                        principalColumn: "QSId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QSRAnswers",
                schema: "sessions",
                columns: table => new
                {
                    QsrAnswerId = table.Column<Guid>(nullable: false),
                    QsrId = table.Column<Guid>(nullable: false),
                    FieldId = table.Column<Guid>(nullable: false),
                    FieldNo = table.Column<int>(nullable: false),
                    Answer = table.Column<string>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedDate = table.Column<DateTime>(nullable: false),
                    LastModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QSRAnswers", x => x.QsrAnswerId);
                    table.ForeignKey(
                        name: "FK_QSRAnswers_Fields_FieldId",
                        column: x => x.FieldId,
                        principalSchema: "forms",
                        principalTable: "Fields",
                        principalColumn: "FieldId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_QSRAnswers_QSR_QsrId",
                        column: x => x.QsrId,
                        principalSchema: "sessions",
                        principalTable: "QSR",
                        principalColumn: "QsrId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_ApplicationQuestionSetMappings_ApplicationTypeId",
                schema: "dbo",
                table: "ApplicationQuestionSetMappings",
                column: "ApplicationTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_ApplicationQuestionSetMappings_QuestionSetId",
                schema: "dbo",
                table: "ApplicationQuestionSetMappings",
                column: "QuestionSetId");

            migrationBuilder.CreateIndex(
                name: "IX_AnswerGuides_AnswerTypeId",
                schema: "forms",
                table: "AnswerGuides",
                column: "AnswerTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_AnswerGuides_FieldId",
                schema: "forms",
                table: "AnswerGuides",
                column: "FieldId");

            migrationBuilder.CreateIndex(
                name: "IX_FieldAggregations_FieldId",
                schema: "forms",
                table: "FieldAggregations",
                column: "FieldId");

            migrationBuilder.CreateIndex(
                name: "IX_FieldAggregations_FunctionId",
                schema: "forms",
                table: "FieldAggregations",
                column: "FunctionId");

            migrationBuilder.CreateIndex(
                name: "IX_FieldConstraints_FieldId",
                schema: "forms",
                table: "FieldConstraints",
                column: "FieldId");

            migrationBuilder.CreateIndex(
                name: "IX_Fields_AnswerRuleId",
                schema: "forms",
                table: "Fields",
                column: "AnswerRuleId");

            migrationBuilder.CreateIndex(
                name: "IX_Fields_ConstraintRuleId",
                schema: "forms",
                table: "Fields",
                column: "ConstraintRuleId");

            migrationBuilder.CreateIndex(
                name: "IX_Fields_DisplayConstraintId",
                schema: "forms",
                table: "Fields",
                column: "DisplayConstraintId");

            migrationBuilder.CreateIndex(
                name: "IX_Fields_DisplayId",
                schema: "forms",
                table: "Fields",
                column: "DisplayId");

            migrationBuilder.CreateIndex(
                name: "IX_Fields_FieldTypeId",
                schema: "forms",
                table: "Fields",
                column: "FieldTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_QS_QSTypeId",
                schema: "forms",
                table: "QS",
                column: "QSTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_QS_StatusId",
                schema: "forms",
                table: "QS",
                column: "StatusId");

            migrationBuilder.CreateIndex(
                name: "IX_QSCollectionMappings_QSCollectionTypeId",
                schema: "forms",
                table: "QSCollectionMappings",
                column: "QSCollectionTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_QSCollectionMappings_QSId",
                schema: "forms",
                table: "QSCollectionMappings",
                column: "QSId");

            migrationBuilder.CreateIndex(
                name: "IX_QSSectionMappings_QSId",
                schema: "forms",
                table: "QSSectionMappings",
                column: "QSId");

            migrationBuilder.CreateIndex(
                name: "IX_QSSectionMappings_SectionId",
                schema: "forms",
                table: "QSSectionMappings",
                column: "SectionId");

            migrationBuilder.CreateIndex(
                name: "IX_SectionFieldMappings_FieldId",
                schema: "forms",
                table: "SectionFieldMappings",
                column: "FieldId");

            migrationBuilder.CreateIndex(
                name: "IX_SectionFieldMappings_SectionId",
                schema: "forms",
                table: "SectionFieldMappings",
                column: "SectionId");

            migrationBuilder.CreateIndex(
                name: "IX_Sections_RuleId",
                schema: "forms",
                table: "Sections",
                column: "RuleId");

            migrationBuilder.CreateIndex(
                name: "IX_Sections_SectionTypeId",
                schema: "forms",
                table: "Sections",
                column: "SectionTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_QSCollections_QSCollectionTypeId",
                schema: "sessions",
                table: "QSCollections",
                column: "QSCollectionTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_QSR_QSCollectionId",
                schema: "sessions",
                table: "QSR",
                column: "QSCollectionId");

            migrationBuilder.CreateIndex(
                name: "IX_QSR_QSId",
                schema: "sessions",
                table: "QSR",
                column: "QSId");

            migrationBuilder.CreateIndex(
                name: "IX_QSRAnswers_FieldId",
                schema: "sessions",
                table: "QSRAnswers",
                column: "FieldId");

            migrationBuilder.CreateIndex(
                name: "IX_QSRAnswers_QsrId",
                schema: "sessions",
                table: "QSRAnswers",
                column: "QsrId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ApplicationQuestionSetMappings",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "AnswerGuides",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "FieldAggregations",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "FieldConstraints",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSCollectionMappings",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSSectionMappings",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "SectionFieldMappings",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSRAnswers",
                schema: "sessions");

            migrationBuilder.DropTable(
                name: "ApplicationTypes",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "QuestionSets",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "AnswerTypes",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Functions",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Sections",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Fields",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSR",
                schema: "sessions");

            migrationBuilder.DropTable(
                name: "SectionTypes",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Rules",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Constraints",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Displays",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "FieldTypes",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSCollections",
                schema: "sessions");

            migrationBuilder.DropTable(
                name: "QS",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSCollectionTypes",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "QSTypes",
                schema: "forms");

            migrationBuilder.DropTable(
                name: "Status",
                schema: "forms");
        }
    }
}
