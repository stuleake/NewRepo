// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;
using System.Diagnostics.CodeAnalysis;

namespace TQ.Data.FormEngine.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class _896_GetQuestionSetbyIdAlter : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            var strGetQuestionSetbyIdProc = @"ALTER PROCEDURE [dbo].[GetQuestionSetbyId] @QuestionSetId UNIQUEIDENTIFIER
             AS
               BEGIN
                   SELECT qs.qsid,
                          qs.qsno,
                          qs.qsversion,
                          qs.qsname,
                          qs.label,
                          qs.helptext,
                          qs.[description],
                          (SELECT[status]
                           FROM [Forms].[status] s
                           WHERE  s.statusid = qs.statusid)                            AS
                          [Status],
                          qs.createddate,
                          qs.lastmodifieddate,
                          qs.lastmodifiedby,
                          qssectionmappings.[sequence]                                 AS
                          SectionSequence,
                          sections.sectionid,
                          sections.label AS
                          SectionLable,
                          sections.helptext AS
                          SectionHelpText,
                          sections.[description]                                       AS
                          SectionDescription,
                          (SELECT TOP 1 sectiontypes
                           FROM   [Forms].sectiontypes
                           WHERE  sectiontypes.sectiontypeid = sections.sectiontypeid) AS
                          SectionType,
                          (SELECT TOP 1[rules]
                           FROM   [Forms].rules
                           WHERE  rules.ruleid = sections.ruleid)                      AS
                          SectionRule,
                          sections.rulecount AS
                          SectionRuleCount,
                          sectionfieldmappings.[sequence]                              AS
                          FieldSequence,
                          fields.fieldid,
                          fields.fieldno,
                          fields.fieldversion,
                          fields.label AS
                          FieldLabel,
                          fields.helptext AS
                          FieldHelptext,
                          fields.description AS
                          FieldDescription,
                          (SELECT fieldtypes
                           FROM   [Forms].fieldtypes FT
                           WHERE FT.fieldtypeid = fields.fieldtypeid)                 AS
                         FieldType,
                          (SELECT displays

                          FROM   [Forms].displays

                          WHERE  displays.displayid = fields.displayid)               AS
                         Display,
                          (SELECT[constraints]

                          FROM   [Forms].constraints C

                          WHERE  C.constraintid = fields.displayconstraintid)         AS
                         DisplayConstraint,
                          (SELECT[rules]

                          FROM   [Forms].rules R

                          WHERE  R.ruleid = fields.constraintruleid)                  AS
                         ConstraintRule,
                          fields.ConstraintRuleCount,
                          (SELECT[rules]
                           FROM [Forms].rules RU
                         WHERE  RU.ruleid = fields.answerruleid)                     AS
                        AnswerRule,
                          fields.answerrulecount,
                          answerguides.answerguideid,
                           (SELECT LOWER(answertypes)
                           FROM  [Forms].answertypes ATS
                           WHERE ATS.answertypeid = answerguides.answertypeid)       AS
                         AnswerType,
                          answerguides.Errlabel AS
                          AnswerGuideError,
                          (SELECT CASE WHEN AnswerGuides.AnswerTypeId=8 and answerguides.[min] IS NOT NULL AND answerguides.[Min] <>''
    					 and answerguides.[min] <>'today' and ISDATE(AnswerGuides.[min]) <>1	 
    					  THEN CONCAT( AnswerGuides.[min] ,'-',(select fieldNo from Forms.Fields where FieldId=convert(UNIQUEIDENTIFIER, answerguides.[min])))
    					 ELSE
    					  answerguides.[min]
    					  END) as [min]
    					  ,

    					  (SELECT CASE WHEN AnswerGuides.AnswerTypeId=8 and answerguides.[max] IS NOT NULL AND answerguides.[max] <>''
    					  AND answerguides.[max] <>'today'	 and ISDATE( AnswerGuides.[max]) <> 1					 					 
    					  THEN CONCAT( AnswerGuides.[max] ,'-',(select fieldNo from Forms.Fields where FieldId=convert(UNIQUEIDENTIFIER, answerguides.[max])))
    					 ELSE
    					  answerguides.[max]
    					  END) as [max],
                        
                          answerguides.label AS
                          AnswerGuideLabel,
                         (SELECT CASE WHEN AnswerGuides.AnswerTypeId <> 3 then  answerguides.[value]  ELSE NULL END ) AS     AnswerGuideValue,
                          answerguides.isdefault,
                          answerguides.[sequence]                                      AS
                          AnswerSequence,
    					  (SELECT CASE WHEN AnswerGuides.AnswerTypeId=3 then  answerguides.[value]  ELSE NULL END ) AS AnswerGuidePattern
                   FROM [Forms].qs
                          INNER JOIN [Forms].qssectionmappings
                                  ON qs.qsid = qssectionmappings.qsid
                          INNER JOIN [Forms].sections
                                  ON sections.sectionid = qssectionmappings.sectionid
                          INNER JOIN [Forms].sectionfieldmappings
                                  ON sectionfieldmappings.sectionid =
                                     qssectionmappings.sectionid
                          INNER JOIN [Forms].fields
                                  ON sectionfieldmappings.fieldid = fields.fieldid
                                     AND sectionfieldmappings.fieldno = fields.fieldno
                          LEFT JOIN [Forms].answerguides
                                  ON answerguides.fieldid = fields.fieldid
    							   AND answerguides.AnswerTypeId <>4
                   WHERE qs.qsid = @QuestionSetId
    			   
                   ORDER BY qsid,
                             sectionid,
                             fieldid,
                             answerguideid,
                             sectionsequence,
                             fieldsequence,
                             answersequence

             -- FieldConstraints table       
				SELECT DISTINCT FieldConstraintId	
				                ,TempFieldConstraint.FieldId	
				                ,TempFieldConstraint.SectionId	
				                ,DependantAnswerFieldId	
				                ,AnswerValue	
				 FROM ( SELECT FC.FieldConstraintId
    						   ,FC.FieldId
    						   --,FC.DependantAnswerGuideId
    						   ,FC.SectionId
    						   ,CONVERT(nvarchar(50), AG.FieldId) + '-' + convert(nvarchar(50), FieldNo) AS DependantAnswerFieldId
							   , AG.[Value] AS AnswerValue
                    FROM   [Forms].FieldConstraints FC
                    INNER JOIN [Forms].AnswerGuides AG
                    ON FC.DependantAnswerGuideId = AG.AnswerGuideId
                    INNER JOIN [Forms].Fields
                    ON AG.FieldId = Fields.FieldId) as TempFieldConstraint
                   INNER JOIN (SELECT QSId, 
									  SFM.Sectionid, 
									  SFM.FieldId 
					from [Forms].QSSectionMappings QSM						
					INNER JOIN [Forms].SectionFieldMappings SFM
							ON  QSM.SectionId =SFM.SectionId
					WHERE   QSId =@QuestionSetId) AS  TempQS
				ON TempFieldConstraint.SectionId = TempQS.SectionId 
					OR TempFieldConstraint.FieldId=TempQS.FieldId
    		   END";
            strGetQuestionSetbyIdProc = strGetQuestionSetbyIdProc.Replace("'", "''");
            migrationBuilder.Sql($"EXEC ('{strGetQuestionSetbyIdProc}')");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            var strGetQuestionSetbyIdProc = @"ALTER PROCEDURE [dbo].[GetQuestionSetbyId] @QuestionSetId UNIQUEIDENTIFIER
         AS
           BEGIN
               SELECT qs.qsid,
                      qs.qsno,
                      qs.qsversion,
                      qs.qsname,
                      qs.label,
                      qs.helptext,
                      qs.[description],
                      (SELECT[status]
                       FROM [Forms].[status] s
                       WHERE  s.statusid = qs.statusid)                            AS
                      [Status],
                      qs.createddate,
                      qs.lastmodifieddate,
                      qs.lastmodifiedby,
                      qssectionmappings.[sequence]                                 AS
                      SectionSequence,
                      sections.sectionid,
                      sections.label AS
                      SectionLable,
                      sections.helptext AS
                      SectionHelpText,
                      sections.[description]                                       AS
                      SectionDescription,
                      (SELECT TOP 1 sectiontypes
                       FROM   [Forms].sectiontypes
                       WHERE  sectiontypes.sectiontypeid = sections.sectiontypeid) AS
                      SectionType,
                      (SELECT TOP 1[rules]
                       FROM   [Forms].rules
                       WHERE  rules.ruleid = sections.ruleid)                      AS
                      SectionRule,
                      sections.rulecount AS
                      SectionRuleCount,
                      sectionfieldmappings.[sequence]                              AS
                      FieldSequence,
                      fields.fieldid,
                      fields.fieldno,
                      fields.fieldversion,
                      fields.label AS
                      FieldLabel,
                      fields.helptext AS
                      FieldHelptext,
                      fields.description AS
                      FieldDescription,
                      (SELECT fieldtypes
                       FROM   [Forms].fieldtypes FT
                       WHERE FT.fieldtypeid = fields.fieldtypeid)                 AS
                     FieldType,
                      (SELECT displays

                      FROM   [Forms].displays

                      WHERE  displays.displayid = fields.displayid)               AS
                     Display,
                      (SELECT[constraints]

                      FROM   [Forms].constraints C

                      WHERE  C.constraintid = fields.displayconstraintid)         AS
                     DisplayConstraint,
                      (SELECT[rules]

                      FROM   [Forms].rules R

                      WHERE  R.ruleid = fields.constraintruleid)                  AS
                     ConstraintRule,
                      fields.ConstraintRuleCount,
                      (SELECT[rules]
                       FROM [Forms].rules RU
                     WHERE  RU.ruleid = fields.answerruleid)                     AS
                    AnswerRule,
                      fields.answerrulecount,
                      answerguides.answerguideid,
                       (SELECT LOWER(answertypes)
                       FROM  [Forms].answertypes ATS
                       WHERE ATS.answertypeid = answerguides.answertypeid)       AS
                     AnswerType,
                      answerguides.Errlabel AS
                      AnswerGuideError,
                      (SELECT CASE WHEN AnswerGuides.AnswerTypeId=8 and answerguides.[min] IS NOT NULL
					 and answerguides.[min] <>'today' and ISDATE(AnswerGuides.[min]) <>1
					  THEN CONCAT( AnswerGuides.[min] ,'-',(select fieldNo from Forms.Fields where FieldId=convert(UNIQUEIDENTIFIER, answerguides.[min])))
					 ELSE
					  answerguides.[min]
					  END) as [min]
					  ,

					  (SELECT CASE WHEN AnswerGuides.AnswerTypeId=8 and answerguides.[max] IS NOT NULL
					  AND answerguides.[max] <>'today'	 and ISDATE( AnswerGuides.[max]) <> 1
					  THEN CONCAT( AnswerGuides.[max] ,'-',(select fieldNo from Forms.Fields where FieldId=convert(UNIQUEIDENTIFIER, answerguides.[max])))
					 ELSE
					  answerguides.[max]
					  END) as [max],

                      answerguides.label AS
                      AnswerGuideLabel,
                     (SELECT CASE WHEN AnswerGuides.AnswerTypeId <> 3 then  answerguides.[value]  ELSE NULL END ) AS     AnswerGuideValue,
                      answerguides.isdefault,
                      answerguides.[sequence]                                      AS
                      AnswerSequence,
					  (SELECT CASE WHEN AnswerGuides.AnswerTypeId=3 then  answerguides.[value]  ELSE NULL END ) AS AnswerGuidePattern
               FROM [Forms].qs
                      INNER JOIN [Forms].qssectionmappings
                              ON qs.qsid = qssectionmappings.qsid
                      INNER JOIN [Forms].sections
                              ON sections.sectionid = qssectionmappings.sectionid
                      INNER JOIN [Forms].sectionfieldmappings
                              ON sectionfieldmappings.sectionid =
                                 qssectionmappings.sectionid
                      INNER JOIN [Forms].fields
                              ON sectionfieldmappings.fieldid = fields.fieldid
                                 AND sectionfieldmappings.fieldno = fields.fieldno
                      LEFT JOIN [Forms].answerguides
                              ON answerguides.fieldid = fields.fieldid
							   AND answerguides.AnswerTypeId <>4
               WHERE qs.qsid = @QuestionSetId

               ORDER BY qsid,
                         sectionid,
                         fieldid,
                         answerguideid,
                         sectionsequence,
                         fieldsequence,
                         answersequence

         -- FieldConstraints table

            SELECT

            FC.FieldConstraintId
			,FC.FieldId
			,FC.DependantAnswerGuideId
			,FC.SubSectionId
			,convert(nvarchar(50), AG.FieldId) + '-' + convert(nvarchar(50), FieldNo) AS DependantAnswerFieldId
              , AG.Value AS AnswerValue
                   FROM   [Forms].FieldConstraints FC

                INNER JOIN [Forms].AnswerGuides AG

                ON FC.DependantAnswerGuideId = AG.AnswerGuideId

                INNER JOIN [Forms].Fields
                ON AG.FieldId = Fields.FieldId

                WHERE FC.FieldId IN(SELECT FieldId

                                  FROM [Forms].SectionFieldMappings

                                  WHERE SectionId IN (SELECT SectionId

                                                       FROM   [Forms].QSSectionMappings
                                                       WHERE  QSId =
                                                      @QuestionSetId))
		   END";
            strGetQuestionSetbyIdProc = strGetQuestionSetbyIdProc.Replace("'", "''");
            migrationBuilder.Sql($"EXEC ('{strGetQuestionSetbyIdProc}')");
        }
    }
}