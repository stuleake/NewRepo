// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TQ.Data.Session.Context;

namespace TQ.Data.Session.Migrations
{
    [DbContext(typeof(SessionContext))]
    [Migration("20200123083818_#909-InitialSetup")]
    partial class _909InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TQ.Data.Session.Model.QuestionSetResponse", b =>
                {
                    b.Property<Guid>("QuestionSetResponseId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastSaved");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<Guid>("QuestionSetId");

                    b.Property<string>("Response");

                    b.Property<Guid>("UserApplicationId");

                    b.HasKey("QuestionSetResponseId");

                    b.HasIndex("UserApplicationId");

                    b.ToTable("QuestionSetResponses");
                });

            modelBuilder.Entity("TQ.Data.Session.Model.UserApplication", b =>
                {
                    b.Property<Guid>("UserApplicationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicationName");

                    b.Property<string>("Country");

                    b.Property<DateTime>("LastSaved");

                    b.Property<Guid>("PlanningFormId");

                    b.Property<bool>("Started");

                    b.Property<string>("Status");

                    b.Property<Guid>("UserId");

                    b.HasKey("UserApplicationId");

                    b.ToTable("UserApplications");
                });

            modelBuilder.Entity("TQ.Data.Session.Model.QuestionSetResponse", b =>
                {
                    b.HasOne("TQ.Data.Session.Model.UserApplication", "UserApplication")
                        .WithMany()
                        .HasForeignKey("UserApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
        }
    }
}
