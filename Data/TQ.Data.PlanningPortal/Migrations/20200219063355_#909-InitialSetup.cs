// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;
using System;
using System.Diagnostics.CodeAnalysis;

namespace TQ.Data.PlanningPortal.Migrations
{
    [ExcludeFromCodeCoverage]
    public partial class _909InitialSetup : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "dbo");

            migrationBuilder.EnsureSchema(
                name: "feecalc");

            migrationBuilder.CreateTable(
                name: "Answers",
                schema: "dbo",
                columns: table => new
                {
                    AnswerId = table.Column<Guid>(nullable: false),
                    ParameterName = table.Column<string>(nullable: true),
                    SessionType = table.Column<string>(nullable: true),
                    SessionId = table.Column<Guid>(nullable: false),
                    ParameterAnswer = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Answers", x => x.AnswerId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationTypes",
                schema: "dbo",
                columns: table => new
                {
                    ApplicationTypeId = table.Column<Guid>(nullable: false),
                    ReferenceId = table.Column<int>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false),
                    Description = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationTypes", x => x.ApplicationTypeId);
                });

            migrationBuilder.CreateTable(
                name: "ParamDataTypes",
                schema: "dbo",
                columns: table => new
                {
                    ParamDataTypeId = table.Column<Guid>(nullable: false),
                    ParamDataTypeName = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ParamDataTypes", x => x.ParamDataTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Qsr",
                schema: "dbo",
                columns: table => new
                {
                    QsrId = table.Column<Guid>(nullable: false),
                    QSCollectionId = table.Column<Guid>(nullable: false),
                    CreateDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Qsr", x => x.QsrId);
                });

            migrationBuilder.CreateTable(
                name: "QuestionSetResponses",
                schema: "dbo",
                columns: table => new
                {
                    QuestionSetResponseId = table.Column<Guid>(nullable: false),
                    UserApplicationId = table.Column<Guid>(nullable: false),
                    Response = table.Column<string>(nullable: true),
                    QuestionSetId = table.Column<Guid>(nullable: false),
                    LastSaved = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QuestionSetResponses", x => x.QuestionSetResponseId);
                });

            migrationBuilder.CreateTable(
                name: "RegionTypes",
                schema: "dbo",
                columns: table => new
                {
                    RegionTypeId = table.Column<Guid>(nullable: false),
                    RegionType = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RegionTypes", x => x.RegionTypeId);
                });

            migrationBuilder.CreateTable(
                name: "UserApplications",
                schema: "dbo",
                columns: table => new
                {
                    UserApplicationId = table.Column<Guid>(nullable: false),
                    UserId = table.Column<Guid>(nullable: false),
                    ApplicationName = table.Column<string>(nullable: true),
                    PlanningFormId = table.Column<Guid>(nullable: false),
                    Started = table.Column<bool>(nullable: false),
                    LastSaved = table.Column<DateTime>(nullable: false),
                    Status = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserApplications", x => x.UserApplicationId);
                });

            migrationBuilder.CreateTable(
                name: "Audits",
                schema: "feecalc",
                columns: table => new
                {
                    AuditId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false),
                    Note = table.Column<string>(nullable: true),
                    PackageId = table.Column<Guid>(nullable: false),
                    TestHeader = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Audits", x => x.AuditId);
                });

            migrationBuilder.CreateTable(
                name: "DefPackages",
                schema: "feecalc",
                columns: table => new
                {
                    DefPackageId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false),
                    FileName = table.Column<string>(nullable: true),
                    Status = table.Column<string>(nullable: true),
                    Version = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefPackages", x => x.DefPackageId);
                });

            migrationBuilder.CreateTable(
                name: "Parameters",
                schema: "dbo",
                columns: table => new
                {
                    ParameterId = table.Column<Guid>(nullable: false),
                    Name = table.Column<string>(nullable: true),
                    ParamDataTypeId = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Parameters", x => x.ParameterId);
                    table.ForeignKey(
                        name: "FK_Parameters_ParamDataTypes_ParamDataTypeId",
                        column: x => x.ParamDataTypeId,
                        principalSchema: "dbo",
                        principalTable: "ParamDataTypes",
                        principalColumn: "ParamDataTypeId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Regions",
                schema: "dbo",
                columns: table => new
                {
                    RegionId = table.Column<Guid>(nullable: false),
                    Name = table.Column<string>(nullable: true),
                    RegionTypeId = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Regions", x => x.RegionId);
                    table.ForeignKey(
                        name: "FK_Regions_RegionTypes_RegionTypeId",
                        column: x => x.RegionTypeId,
                        principalSchema: "dbo",
                        principalTable: "RegionTypes",
                        principalColumn: "RegionTypeId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Definitions",
                schema: "feecalc",
                columns: table => new
                {
                    DefinitionId = table.Column<Guid>(nullable: false),
                    DefPackageId = table.Column<Guid>(nullable: false),
                    ApplicationTypeId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<string>(nullable: true),
                    CalculationDetails = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Definitions", x => x.DefinitionId);
                    table.ForeignKey(
                        name: "FK_Definitions_ApplicationTypes_ApplicationTypeId",
                        column: x => x.ApplicationTypeId,
                        principalSchema: "dbo",
                        principalTable: "ApplicationTypes",
                        principalColumn: "ApplicationTypeId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Definitions_DefPackages_DefPackageId",
                        column: x => x.DefPackageId,
                        principalSchema: "feecalc",
                        principalTable: "DefPackages",
                        principalColumn: "DefPackageId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestHeaders",
                schema: "feecalc",
                columns: table => new
                {
                    TestHeaderId = table.Column<Guid>(nullable: false),
                    DefPackageId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false),
                    CalculationDetails = table.Column<string>(nullable: true),
                    TestSuccess = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestHeaders", x => x.TestHeaderId);
                    table.ForeignKey(
                        name: "FK_TestHeaders_DefPackages_DefPackageId",
                        column: x => x.DefPackageId,
                        principalSchema: "feecalc",
                        principalTable: "DefPackages",
                        principalColumn: "DefPackageId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RuleDefs",
                schema: "dbo",
                columns: table => new
                {
                    RuleDefId = table.Column<Guid>(nullable: false),
                    DefPackageId = table.Column<Guid>(nullable: false),
                    ReferenceId = table.Column<int>(nullable: false),
                    RuleName = table.Column<string>(nullable: true),
                    RuleDefinition = table.Column<string>(nullable: true),
                    RuleDescription = table.Column<string>(nullable: true),
                    StartDate = table.Column<DateTime>(nullable: false),
                    EndDate = table.Column<DateTime>(nullable: false),
                    SequenceNo = table.Column<int>(nullable: false),
                    RegionId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RuleDefs", x => x.RuleDefId);
                    table.ForeignKey(
                        name: "FK_RuleDefs_DefPackages_DefPackageId",
                        column: x => x.DefPackageId,
                        principalSchema: "feecalc",
                        principalTable: "DefPackages",
                        principalColumn: "DefPackageId",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_RuleDefs_Regions_RegionId",
                        column: x => x.RegionId,
                        principalSchema: "dbo",
                        principalTable: "Regions",
                        principalColumn: "RegionId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Sessions",
                schema: "feecalc",
                columns: table => new
                {
                    SessionId = table.Column<Guid>(nullable: false),
                    UserId = table.Column<Guid>(nullable: false),
                    PlanningApplicationId = table.Column<Guid>(nullable: false),
                    CalculationInputs = table.Column<string>(nullable: true),
                    CalculationOutputs = table.Column<string>(nullable: true),
                    DefinitionId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Sessions", x => x.SessionId);
                    table.ForeignKey(
                        name: "FK_Sessions_Definitions_DefinitionId",
                        column: x => x.DefinitionId,
                        principalSchema: "feecalc",
                        principalTable: "Definitions",
                        principalColumn: "DefinitionId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RuleDefParameterMappings",
                schema: "dbo",
                columns: table => new
                {
                    RuleDefParameterMappingId = table.Column<Guid>(nullable: false),
                    RuleDefId = table.Column<Guid>(nullable: false),
                    ParameterId = table.Column<Guid>(nullable: false),
                    Sequence = table.Column<int>(nullable: false),
                    ParameterType = table.Column<string>(nullable: true),
                    OutputOperation = table.Column<string>(nullable: true),
                    IsFinalOutput = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RuleDefParameterMappings", x => x.RuleDefParameterMappingId);
                    table.ForeignKey(
                        name: "FK_RuleDefParameterMappings_Parameters_ParameterId",
                        column: x => x.ParameterId,
                        principalSchema: "dbo",
                        principalTable: "Parameters",
                        principalColumn: "ParameterId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_RuleDefParameterMappings_RuleDefs_RuleDefId",
                        column: x => x.RuleDefId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RuleQuestions",
                schema: "dbo",
                columns: table => new
                {
                    RuleQuestionId = table.Column<Guid>(nullable: false),
                    RuleDefId = table.Column<Guid>(nullable: false),
                    Name = table.Column<string>(nullable: true),
                    Datatype = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RuleQuestions", x => x.RuleQuestionId);
                    table.ForeignKey(
                        name: "FK_RuleQuestions_RuleDefs_RuleDefId",
                        column: x => x.RuleDefId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "DefsRuleDefMapping",
                schema: "feecalc",
                columns: table => new
                {
                    DefsRuleDefMappingId = table.Column<Guid>(nullable: false),
                    DefinitionId = table.Column<Guid>(nullable: false),
                    RuleDefId = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefsRuleDefMapping", x => x.DefsRuleDefMappingId);
                    table.ForeignKey(
                        name: "FK_DefsRuleDefMapping_Definitions_DefinitionId",
                        column: x => x.DefinitionId,
                        principalSchema: "feecalc",
                        principalTable: "Definitions",
                        principalColumn: "DefinitionId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_DefsRuleDefMapping_RuleDefs_RuleDefId",
                        column: x => x.RuleDefId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Steps",
                schema: "feecalc",
                columns: table => new
                {
                    StepId = table.Column<Guid>(nullable: false),
                    RuleId = table.Column<Guid>(nullable: false),
                    SessionType = table.Column<string>(nullable: true),
                    SessionId = table.Column<Guid>(nullable: false),
                    Description = table.Column<string>(nullable: true),
                    RuleNo = table.Column<int>(nullable: false),
                    Inputs = table.Column<string>(nullable: true),
                    Output = table.Column<string>(nullable: true),
                    OutputParamName = table.Column<string>(nullable: true),
                    OutputDataType = table.Column<string>(nullable: true),
                    IsFinalOutput = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Steps", x => x.StepId);
                    table.ForeignKey(
                        name: "FK_Steps_RuleDefs_RuleId",
                        column: x => x.RuleId,
                        principalSchema: "dbo",
                        principalTable: "RuleDefs",
                        principalColumn: "RuleDefId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSetLines",
                schema: "feecalc",
                columns: table => new
                {
                    TestSetLineId = table.Column<Guid>(nullable: false),
                    DefinitionId = table.Column<Guid>(nullable: false),
                    TestLineId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false),
                    CalculationData = table.Column<string>(nullable: true),
                    Expected = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSetLines", x => x.TestSetLineId);
                    table.ForeignKey(
                        name: "FK_TestSetLines_Definitions_DefinitionId",
                        column: x => x.DefinitionId,
                        principalSchema: "feecalc",
                        principalTable: "Definitions",
                        principalColumn: "DefinitionId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestSetHeaders",
                schema: "feecalc",
                columns: table => new
                {
                    TestSetHeaderId = table.Column<Guid>(nullable: false),
                    TestSetLineId = table.Column<Guid>(nullable: false),
                    ImportFileName = table.Column<string>(nullable: true),
                    Description = table.Column<string>(nullable: true),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    ModifiedDate = table.Column<DateTime>(nullable: false),
                    ModifiedBy = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestSetHeaders", x => x.TestSetHeaderId);
                    table.ForeignKey(
                        name: "FK_TestSetHeaders_TestSetLines_TestSetLineId",
                        column: x => x.TestSetLineId,
                        principalSchema: "feecalc",
                        principalTable: "TestSetLines",
                        principalColumn: "TestSetLineId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TestLines",
                schema: "feecalc",
                columns: table => new
                {
                    TestLineId = table.Column<Guid>(nullable: false),
                    TestSetHeaderId = table.Column<Guid>(nullable: false),
                    CreatedDate = table.Column<DateTime>(nullable: false),
                    CreatedBy = table.Column<Guid>(nullable: false),
                    CalculationData = table.Column<string>(nullable: true),
                    Expected = table.Column<string>(nullable: true),
                    Actual = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TestLines", x => x.TestLineId);
                    table.ForeignKey(
                        name: "FK_TestLines_TestSetHeaders_TestSetHeaderId",
                        column: x => x.TestSetHeaderId,
                        principalSchema: "feecalc",
                        principalTable: "TestSetHeaders",
                        principalColumn: "TestSetHeaderId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_ApplicationTypes_ReferenceId",
                schema: "dbo",
                table: "ApplicationTypes",
                column: "ReferenceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Parameters_ParamDataTypeId",
                schema: "dbo",
                table: "Parameters",
                column: "ParamDataTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_Regions_RegionTypeId",
                schema: "dbo",
                table: "Regions",
                column: "RegionTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefParameterMappings_ParameterId",
                schema: "dbo",
                table: "RuleDefParameterMappings",
                column: "ParameterId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefParameterMappings_RuleDefId",
                schema: "dbo",
                table: "RuleDefParameterMappings",
                column: "RuleDefId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefs_RegionId",
                schema: "dbo",
                table: "RuleDefs",
                column: "RegionId");

            migrationBuilder.CreateIndex(
                name: "IX_RuleDefs_DefPackageId_ReferenceId",
                schema: "dbo",
                table: "RuleDefs",
                columns: new[] { "DefPackageId", "ReferenceId" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_RuleQuestions_RuleDefId",
                schema: "dbo",
                table: "RuleQuestions",
                column: "RuleDefId");

            migrationBuilder.CreateIndex(
                name: "IX_Definitions_ApplicationTypeId",
                schema: "feecalc",
                table: "Definitions",
                column: "ApplicationTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_Definitions_DefPackageId",
                schema: "feecalc",
                table: "Definitions",
                column: "DefPackageId");

            migrationBuilder.CreateIndex(
                name: "IX_DefsRuleDefMapping_DefinitionId",
                schema: "feecalc",
                table: "DefsRuleDefMapping",
                column: "DefinitionId");

            migrationBuilder.CreateIndex(
                name: "IX_DefsRuleDefMapping_RuleDefId",
                schema: "feecalc",
                table: "DefsRuleDefMapping",
                column: "RuleDefId");

            migrationBuilder.CreateIndex(
                name: "IX_Sessions_DefinitionId",
                schema: "feecalc",
                table: "Sessions",
                column: "DefinitionId");

            migrationBuilder.CreateIndex(
                name: "IX_Steps_RuleId",
                schema: "feecalc",
                table: "Steps",
                column: "RuleId");

            migrationBuilder.CreateIndex(
                name: "IX_TestHeaders_DefPackageId",
                schema: "feecalc",
                table: "TestHeaders",
                column: "DefPackageId");

            migrationBuilder.CreateIndex(
                name: "IX_TestLines_TestSetHeaderId",
                schema: "feecalc",
                table: "TestLines",
                column: "TestSetHeaderId");

            migrationBuilder.CreateIndex(
                name: "IX_TestSetHeaders_TestSetLineId",
                schema: "feecalc",
                table: "TestSetHeaders",
                column: "TestSetLineId");

            migrationBuilder.CreateIndex(
                name: "IX_TestSetLines_DefinitionId",
                schema: "feecalc",
                table: "TestSetLines",
                column: "DefinitionId");

            migrationBuilder.CreateIndex(
                name: "IX_TestSetLines_TestLineId",
                schema: "feecalc",
                table: "TestSetLines",
                column: "TestLineId");

            migrationBuilder.AddForeignKey(
                name: "FK_TestSetLines_TestLines_TestLineId",
                schema: "feecalc",
                table: "TestSetLines",
                column: "TestLineId",
                principalSchema: "feecalc",
                principalTable: "TestLines",
                principalColumn: "TestLineId",
                onDelete: ReferentialAction.Restrict);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Definitions_DefPackages_DefPackageId",
                schema: "feecalc",
                table: "Definitions");

            migrationBuilder.DropForeignKey(
                name: "FK_Definitions_ApplicationTypes_ApplicationTypeId",
                schema: "feecalc",
                table: "Definitions");

            migrationBuilder.DropForeignKey(
                name: "FK_TestSetLines_Definitions_DefinitionId",
                schema: "feecalc",
                table: "TestSetLines");

            migrationBuilder.DropForeignKey(
                name: "FK_TestLines_TestSetHeaders_TestSetHeaderId",
                schema: "feecalc",
                table: "TestLines");

            migrationBuilder.DropTable(
                name: "Answers",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Qsr",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "QuestionSetResponses",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "RuleDefParameterMappings",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "RuleQuestions",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "UserApplications",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Audits",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "DefsRuleDefMapping",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "Sessions",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "Steps",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "TestHeaders",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "Parameters",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "RuleDefs",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "ParamDataTypes",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Regions",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "RegionTypes",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "DefPackages",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "ApplicationTypes",
                schema: "dbo");

            migrationBuilder.DropTable(
                name: "Definitions",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "TestSetHeaders",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "TestSetLines",
                schema: "feecalc");

            migrationBuilder.DropTable(
                name: "TestLines",
                schema: "feecalc");
        }
    }
}
